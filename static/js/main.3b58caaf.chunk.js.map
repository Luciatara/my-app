{"version":3,"sources":["AutoCompleteText.js","logo.svg","App.js","herstuff.js","reportWebVitals.js","index.js"],"names":["AutoCompleteText","props","onTextChanged","e","value","target","suggestions","length","regex","RegExp","items","sort","filter","v","test","setState","text","state","this","map","item","onClick","suggestionSelected","id","onChange","type","renderSuggestions","React","Component","App","black","no","btn_class","className","rel","href","sizes","class","src","changeColor","bind","whatever","dostuff","datastuff","i","userwant","document","getElementById","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3b58caaf.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class AutoCompleteText extends React.Component {\n    constructor (props) {\n        super(props);\n        this.items = [\n            'Is hydroxychloroquine a treatment for COVID-19?',\n            'Hydroxychloroquine is a treatment for COVID-19?',\n            'Will drinking alcohol prevent COVID-19?',\n            'Will drinking bleach prevent COVID-19?',\n            'Alcohol prevents COVID-19?',\n            'Bleach prevents COVID-19?',\n            'Does eating pepper cure COVID-19?',\n            'Do mosquitos transmit COVID-19?',\n            'Is injecting disinfectant as cure for COVID-19?',\n            'What are the symptoms of COVID?',\n            'COVID-19 symptoms',\n            'Is wearing a mask bad for you?',\n            'What are the treatments for COVID-19?',\n            'Can cold weather kill the COVID-19 virus?',\n            'Does garlic prevent COVID-19?',\n            'Can antibiotics cure COVID-19?',\n            'Can thermometers detect COVID-19?',\n        ];\n        this.state = {\n            suggestions: [],\n            text: '',\n        };\n\n    }\n\n    onTextChanged = (e) => {\n        const value = e.target.value;\n        let suggestions = [];\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = this.items.sort().filter(v => regex.test(v));\n        }\n        this.setState(() => ({ suggestions, text: value }));\n    }\n\n    suggestionSelected (value) {\n        this.setState(() => ({\n            text: value,\n            suggestions: [],\n        }))\n    }\n\n    renderSuggestions () {\n        const { suggestions } = this.state;\n        if (suggestions.length === 0) {\n            return null;\n        }\n        return (\n            <ul>\n                {suggestions.map((item) => <li onClick={() => this.suggestionSelected(item)}>{item}</li>)}\n            </ul>\n        );\n\n    }\n\n    render () {\n        const { text } = this.state;\n        return (\n            <div>\n                <input id = \"userenter\" value={text} onChange={this.onTextChanged} type=\"text\" />\n                <ul >\n                    {this.renderSuggestions()}\n                </ul>\n            </div>\n        );\n    }\n\n}","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AutoCompleteText from './AutoCompleteText';\nimport { render } from '@testing-library/react';\nimport herstuff from './herstuff';\n\nclass App extends Component {\n    constructor(){\n      super();\n\n      this.state = {\n          black: true\n          ,no: false\n      }\n  }\n  \n  changeColor(){\n    this.setState({black: !this.state.black});\n    this.setState({no: !this.state.no});\n    \n  }\n  render() {\n    let btn_class = this.state.black ? \"blackButton\" : \"whiteButton\";\n    let out_class = this.state.no ? \"noout\" : \"yesout\";\n    return (\n      <div className=\"App\">\n        <head>\n          <link rel=\"icon\" href=\"https://www.flaticon.com/svg/static/icons/svg/2813/2813483.svg\" type=\"image/gif\" sizes=\"16x16\"></link>\n        </head>\n        <div class=\"parallax-container\">\n          <div class=\"parallax\">\n          </div>\n        </div>\n        <div className=\"hello\">\n        <div class = \"corona\">\n          <h1>CORONAVIRUS</h1>\n          <div class =\"movingvirus\">\n            <div class=\"animatediv1\"> \n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/2813/2813483.svg\"></img>\n            </div>\n            <div class=\"animatediv2\"> \n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/2813/2813483.svg\"></img>\n            </div>\n            <div class=\"animatediv3\"> \n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/2813/2813483.svg\"></img>\n            </div>\n            <div class=\"animatediv4\"> \n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/2813/2813483.svg\"></img>\n            </div>\n            <div class=\"animatediv5\"> \n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/2813/2813483.svg\"></img>\n            </div>\n            <div class=\"animatediv6\"> \n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/2813/2813483.svg\"></img>\n            </div>\n            <div class=\"animatediv7\"> \n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/2813/2813483.svg\"></img>\n            </div>\n            <div class=\"animatediv8\"> \n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/2813/2813483.svg\"></img>\n            </div>\n          </div>\n        </div>\n        <h1>Welcome to the Fact Checker!</h1>\n        <p>Enter your question here:</p>\n        <div class=\"uglytext\">\n          <AutoCompleteText />\n        </div>\n        <br></br><br></br><br></br><br></br>\n        <div class =\"submit\" >\n          <button className={btn_class} onClick={this.changeColor.bind(this)}>submit</button>\n        </div>\n        <br></br><br></br>\n        \n        <div class =\"outputstuff\" >\n          \n          <p>{this.whatever()}</p>\n        </div>  \n        \n\n\n\n        </div>\n        <div class=\"parallax-container\">\n          <div class=\"parallax\">\n          </div>\n        </div>\n        <div class=\"parallax-container\">\n          <div class=\"parallax\">\n          </div>\n        </div>\n        <div class=\"parallax-container\">\n          <div class=\"parallax\">\n          </div>\n        </div>\n      </div>\n    );\n    \n  }\n  whatever() {\n    if (this.state.no){\n      return this.dostuff();\n    }\n}\n  dostuff() {\n    const datastuff = [\n        \"Vitamin and mineral supplements cannot cure COVID-19\",\n        \"Studies show hydroxychloroquine does not have clinical benefits in treating COVID-19\",\n        \"People should NOT wear masks while exercising\",\n        \"The likelihood of shoes spreading COVID-19 is very low\",\n        \"The coronavirus disease (COVID-19) is caused by a virus, NOT by bacteria\",\n        \"The prolonged use of medical masks* when properly worn, DOES NOT cause CO2 intoxication nor oxygen deficiency\",\n        \"Most people who get COVID-19 recover from it\",\n        \"Drinking alcohol does not protect you against COVID-19 and can be dangerous\",\n        \"Thermal scanners CANNOT detect COVID-19\",\n        \"There are currently no drugs licensed for the treatment or prevention of COVID-19\",\n        \"Adding pepper to your soup or other meals DOES NOT prevent or cure COVID-19\",\n        \"COVID-19 is NOT transmitted through houseflies\",\n        \"Spraying and introducing bleach or another disinfectant into your body WILL NOT protect you against COVID-19 and can be dangerous\",\n        \"Drinking methanol, ethanol or bleach DOES NOT prevent or cure COVID-19 and can be extremely dangerous\",\n        \"5G mobile networks DO NOT spread COVID-19\",\n        \"Exposing yourself to the sun or temperatures higher than 25°C DOES NOT protect you from COVID-19\",\n        \"Catching COVID-19 DOES NOT mean you will have it for life\",\n        \"Being able to hold your breath for 10 seconds or more without coughing or feeling discomfort DOES NOT mean you are free from COVID-19\",\n        \"The COVID-19 virus can spread in hot and humid climates\",\n        \"Cold weather and snow CANNOT kill the COVID-19 virus\",\n        \"Taking a hot bath does not prevent COVID-19The COVID-19 virus CANNOT be spread through mosquito bites\",\n        \"Hand dryers are NOT effective in killing the COVID-19 virus\",\n        \"Ultra-violet (UV) lamps should NOT be used to disinfect hands or other areas of your skin\",\n        \"Vaccines against pneumonia DO NOT protect against the COVID-19 virus\",\n        \"Rinsing your nose with saline does NOT prevent COVID-19 \",\n        \"eating garlic does NOT prevent COVID-19\",\n        \"People of all ages can be infected by the COVID-19 virus\",\n        \"Antibiotics CANNOT prevent or treat COVID-19\",\n        \"There are no medicines that can prevent or treat COVID-19\"\n    ];\n\n    /*\n    const request = require('request');\n    const cheerio = require('cheerio');\n\n    request('https://www.who.int/emergencies/diseases/novel-coronavirus-2019/advice-for-public/myth-busters', (error, response, html) => {\n    if (!error && response.statusCode === 200) {\n        const $ = cheerio.load(html);\n\n        const row = $('.row');\n        //console.log(row.text());\n\n        const output = row.find('h2').text().replace(/\\s\\s+/g, '');\n        console.log(output);\n        var word = \"\";\n    var userwant = document.getElementById(\"userenter\").value;\n    var found = false;\n    var i;\n    for (i=0; i <output.length-3; i++){\n        if (output.slice(i,i+3)===\"FACT\"){\n            word = \"\";\n            i+=5;\n            while (output.slice(i,i+3)!==\"FACT\"){\n                word+=output[i];\n                i++;\n            }\n            var match = word.match(userwant);\n            if (match!=null){\n                found = true;\n                console.log(\"The world health organisation states\"+word)\n                return \"The world health organisation states\"+word;\n                i = output.length-3;\n            }\n        }\n    }\n    if (!found){\n        console.log(\"The world health organisation has not said anything about this yet.\")\n        return \"The world health organisation has not said anything about this yet.\";\n    }\n\n        \n    }    \n    });\n    \n    */\n   var i= 0;\n   var userwant = document.getElementById(\"userenter\").value;\n   var found = false;\n    for (i = 0 ; i <datastuff.length;i++){\n        if (datastuff[i].match(userwant) != null){\n            found = true;\n            \n            return datastuff[i];\n        }\n    }\n    return \"The WHO has not commented on this matter\";\n\n}\n\n  \n}\n\nexport default App;\n","import React from 'react';\nimport AutoCompleteText from './AutoCompleteText';\n\n\nexport default class herstuff extends React.Component {\n    constructor (props) {\n        super(props);\n    }\n    dostuff() {\n        const datastuff = [\n            \"Vitamin and mineral supplements cannot cure COVID-19\",\n            \"Studies show hydroxychloroquine does not have clinical benefits in treating COVID-19\",\n            \"People should NOT wear masks while exercising\",\n            \"The likelihood of shoes spreading COVID-19 is very low\",\n            \"The coronavirus disease (COVID-19) is caused by a virus, NOT by bacteria\",\n            \"The prolonged use of medical masks* when properly worn, DOES NOT cause CO2 intoxication nor oxygen deficiency\",\n            \"Most people who get COVID-19 recover from it\",\n            \"Drinking alcohol does not protect you against COVID-19 and can be dangerous\",\n            \"Thermal scanners CANNOT detect COVID-19\",\n            \"There are currently no drugs licensed for the treatment or prevention of COVID-19\",\n            \"Adding pepper to your soup or other meals DOES NOT prevent or cure COVID-19\",\n            \"COVID-19 is NOT transmitted through houseflies\",\n            \"Spraying and introducing bleach or another disinfectant into your body WILL NOT protect you against COVID-19 and can be dangerous\",\n            \"Drinking methanol, ethanol or bleach DOES NOT prevent or cure COVID-19 and can be extremely dangerous\",\n            \"5G mobile networks DO NOT spread COVID-19\",\n            \"Exposing yourself to the sun or temperatures higher than 25°C DOES NOT protect you from COVID-19\",\n            \"Catching COVID-19 DOES NOT mean you will have it for life\",\n            \"Being able to hold your breath for 10 seconds or more without coughing or feeling discomfort DOES NOT mean you are free from COVID-19\",\n            \"The COVID-19 virus can spread in hot and humid climates\",\n            \"Cold weather and snow CANNOT kill the COVID-19 virus\",\n            \"Taking a hot bath does not prevent COVID-19The COVID-19 virus CANNOT be spread through mosquito bites\",\n            \"Hand dryers are NOT effective in killing the COVID-19 virus\",\n            \"Ultra-violet (UV) lamps should NOT be used to disinfect hands or other areas of your skin\",\n            \"Vaccines against pneumonia DO NOT protect against the COVID-19 virus\",\n            \"Rinsing your nose with saline does NOT prevent COVID-19 \",\n            \"eating garlic does NOT prevent COVID-19\",\n            \"People of all ages can be infected by the COVID-19 virus\",\n            \"Antibiotics CANNOT prevent or treat COVID-19\",\n            \"There are no medicines that can prevent or treat COVID-19\"\n        ];\n\n        /*\n        const request = require('request');\n        const cheerio = require('cheerio');\n\n        request('https://www.who.int/emergencies/diseases/novel-coronavirus-2019/advice-for-public/myth-busters', (error, response, html) => {\n        if (!error && response.statusCode === 200) {\n            const $ = cheerio.load(html);\n\n            const row = $('.row');\n            //console.log(row.text());\n\n            const output = row.find('h2').text().replace(/\\s\\s+/g, '');\n            console.log(output);\n            var word = \"\";\n        var userwant = AutoCompleteText.userenter.text;\n        var found = false;\n        var i;\n        for (i=0; i <output.length-3; i++){\n            if (output.slice(i,i+3)===\"FACT\"){\n                word = \"\";\n                i+=5;\n                while (output.slice(i,i+3)!==\"FACT\"){\n                    word+=output[i];\n                    i++;\n                }\n                var match = word.match(userwant);\n                if (match!=null){\n                    found = true;\n                    console.log(\"The world health organisation states\"+word)\n                    return \"The world health organisation states\"+word;\n                    i = output.length-3;\n                }\n            }\n        }\n        if (!found){\n            console.log(\"The world health organisation has not said anything about this yet.\")\n            return \"The world health organisation has not said anything about this yet.\";\n        }\n\n            \n        }    \n        });\n        \n        */\n       var i= 0;\n       var userwant = AutoCompleteText.userenter.text;\n       var found = false;\n        for (i = 0 ; i <datastuff.length;i++){\n            if (datastuff[i].match(userwant) != null){\n                found = true;\n                \n                return datastuff[i];\n            }\n        }\n        return \"the WHO has not commented on this matter\";\n    }\n\n    render () {\n\n        return (\n            <div>\n                <p> {this.dostuff()} </p>\n            </div>\n        );\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}